{"version":3,"sources":["Components/WithSpinner/WithSpinnerTVShows.js","Components/CollectionGridItem/CollectionGridItem.js","Components/CollectionGrid/CollectionGrid.js","Utils/GridScrollArrows.js","Components/CollectionGrid/CollectionGridTVShows.js"],"names":["WithSpinnerTVShows","WrappedComponent","isTVGridLoading","isTVOverviewLoading","otherProps","CollectionGridItem","item","title","listItems","addItem","overview","backdrop_path","poster_path","name","className","src","IMAGE_BASE_URL","BACKDROP_SIZE","alt","AddToList","CollectionGrid","gridRef","React","createRef","this","props","movieGridItems","tvShowGridItems","movies","tvshow","icon","faChevronLeft","onClick","node","move","current","pixelWidth","window","innerWidth","console","log","$","animate","scrollLeft","LeftGridArrow","ref","map","key","id","faChevronRight","RightGridArrow","Component","connect","state","selectMovieGridItems","selectTVGridItems","mapStateToProps","createStructuredSelector","selectIsTVFetching","CollectionGridTVShows","compose"],"mappings":"oOAceA,IAXY,SAAAC,GAAgB,OACzC,YAA6D,IAA1DC,EAAyD,EAAzDA,gBAAgBC,EAAyC,EAAzCA,oBAAwBC,EAAiB,iBAE1D,OAAOF,EACL,kBAAC,IAAD,MACCC,EACC,KACA,kBAACF,EAAqBG,M,sHCmBfC,EAxBY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KACpBC,GADmD,EAAzBC,UAAyB,EAAdC,QACiBH,EAAtDC,OAAOG,EAA+CJ,EAA/CI,SAAUC,EAAqCL,EAArCK,cAAeC,EAAsBN,EAAtBM,YAAaC,EAASP,EAATO,KACrD,OACE,yBAAKC,UAAU,aACb,yBACEC,IAAG,UAAKC,KAAL,OAAsBC,KAAtB,OAAsCN,GACzCO,IAAI,QACJJ,UAAU,mBAEZ,yBACEC,IAAG,UAAKC,KAAL,OAAsBC,KAAtB,OAAsCL,GACzCM,IAAI,QACJJ,UAAU,yCAEZ,yBAAKA,UAAS,UAAKP,EAAQ,wBAA0B,uBACnD,wBAAIO,UAAU,oBAAoBP,GAClC,wBAAIO,UAAU,oBAAoBD,GAClC,0BAAMC,UAAU,uBAAuBJ,GACvC,kBAACS,EAAA,EAAD,CAAWb,KAAMA,O,yDCVnBc,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,QAAUC,IAAMC,YAFT,E,0CAKd,WAAU,IAAD,OACP,EAA4DC,KAAKC,MAAzDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,gBAAiBC,EAAzC,EAAyCA,OAAQC,EAAjD,EAAiDA,OACjD,OACE,yBAAKf,UAAU,mBACb,0BAAMA,UAAU,+BACd,kBAAC,IAAD,CACEgB,KAAMC,IACNjB,UAAU,oCACVkB,QAAS,kBCzBQ,SAAAC,GAC3B,IAAIC,EAAOD,EAAKE,QAEZC,EADQC,OAAOC,WACM,KACzBC,QAAQC,IAAIJ,GACZK,IAAEP,GAAMQ,QACN,CACEC,WAAY,KAAOP,GAErB,QDgBuBQ,CAAc,EAAKvB,aAGtC,yBAAKP,UAAU,yBAAyB+B,IAAKrB,KAAKH,SAChD,yBAAKP,UAAU,0BACZc,EACGF,EAAeoB,KAAI,SAAAxC,GAAI,OACrB,kBAAC,EAAD,CAAoByC,IAAKzC,EAAK0C,GAAI1C,KAAMA,OAE1C,KACHuB,EACGF,EAAgBmB,KAAI,SAAAxC,GAAI,OACtB,kBAAC,EAAD,CAAoByC,IAAKzC,EAAK0C,GAAI1C,KAAMA,OAE1C,MAEN,0BAAMQ,UAAU,gCACd,kBAAC,IAAD,CACEgB,KAAMmB,IACNnC,UAAU,qCACVkB,QAAS,kBChCO,SAAAC,GAC5B,IAAIC,EAAOD,EAAKE,QAEZC,EADQC,OAAOC,WACM,KACzBG,IAAEP,GAAMQ,QACN,CACEC,WAAY,KAAOP,GAErB,QDwByBc,CAAe,EAAK7B,mB,GAlCpBC,IAAM6B,WAgDpBC,iBALS,SAAAC,GAAK,MAAK,CAChC3B,eAAgB4B,YAAqBD,GACrC1B,gBAAiB4B,YAAkBF,MAGtBD,CAAyBhC,I,iCE7DxC,0DASMoC,EAAkBC,YAAyB,CAC/CvD,gBAAiBwD,MAGbC,EAAwBC,YAC5BR,YAAQI,GACRxD,IAF4B4D,CAG5BxC,KAEauC","file":"static/js/8.1539e181.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst WithSpinnerTVShows = WrappedComponent => \r\n  ({ isTVGridLoading,isTVOverviewLoading, ...otherProps }) => {\r\n\r\n    return isTVGridLoading\r\n    ? <Spinner />\r\n    : (isTVOverviewLoading\r\n      ? null\r\n      : <WrappedComponent {...otherProps} />)\r\n       \r\n};\r\n\r\nexport default WithSpinnerTVShows;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../Config/config\";\r\nimport \"./CollectionGridItem.scss\";\r\nimport AddToList from \"../AddToList/AddToList\";\r\n\r\nconst CollectionGridItem = ({ item, listItems, addItem }) => {\r\n  const { title, overview, backdrop_path, poster_path, name } = item;\r\n  return (\r\n    <div className=\"grid-item\">\r\n      <img\r\n        src={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop_path}`}\r\n        alt=\"movie\"\r\n        className=\"grid-item__img\"\r\n      />\r\n      <img\r\n        src={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${poster_path}`}\r\n        alt=\"movie\"\r\n        className=\"grid-item__img grid-item__mobile-img\"\r\n      />\r\n      <div className={`${title ? \"grid-item__movie-text\" : \"grid-item__tv-text\"}`}>\r\n        <h1 className=\"grid-item__title\">{title}</h1>\r\n        <h1 className=\"grid-item__title\">{name}</h1>\r\n        <span className=\"grid-item__overview\">{overview}</span>\r\n        <AddToList item={item} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionGridItem;\r\n","import React from \"react\";\r\nimport \"./CollectionGrid.scss\";\r\nimport CollectionGridItem from \"../CollectionGridItem/CollectionGridItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectMovieGridItems } from \"../../Redux/Movie/movie-selectors\";\r\nimport { selectTVGridItems } from \"../../Redux/TVShow/tv-selectors\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { LeftGridArrow, RightGridArrow } from \"../../Utils/GridScrollArrows\";\r\n\r\nclass CollectionGrid extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.gridRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const { movieGridItems, tvShowGridItems, movies, tvshow } = this.props;\r\n    return (\r\n      <div className=\"collection-grid\">\r\n        <span className=\"collection-grid__left-arrow\">\r\n          <FontAwesomeIcon\r\n            icon={faChevronLeft}\r\n            className=\"collection-grid__left-arrow--icon\"\r\n            onClick={() => LeftGridArrow(this.gridRef)}\r\n          />\r\n        </span>\r\n        <div className=\"collection-grid__outer\" ref={this.gridRef}>\r\n          <div className=\"collection-grid__inner\">\r\n            {movies\r\n              ? movieGridItems.map(item => (\r\n                  <CollectionGridItem key={item.id} item={item} />\r\n                ))\r\n              : null}\r\n            {tvshow\r\n              ? tvShowGridItems.map(item => (\r\n                  <CollectionGridItem key={item.id} item={item} />\r\n                ))\r\n              : null}\r\n          </div>\r\n          <span className=\"collection-grid__right-arrow\">\r\n            <FontAwesomeIcon\r\n              icon={faChevronRight}\r\n              className=\"collection-grid__right-arrow--icon\"\r\n              onClick={() => RightGridArrow(this.gridRef)}\r\n            />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movieGridItems: selectMovieGridItems(state),\r\n  tvShowGridItems: selectTVGridItems(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionGrid);\r\n","import $ from \"jquery\";\r\n\r\nexport const LeftGridArrow = node => {\r\n  var move = node.current;\r\n  var width = window.innerWidth;\r\n  var pixelWidth = width + \"px\";\r\n  console.log(pixelWidth);\r\n  $(move).animate(\r\n    {\r\n      scrollLeft: \"-=\" + pixelWidth\r\n    },\r\n    \"slow\"\r\n  );\r\n};\r\n\r\nexport const RightGridArrow = node => {\r\n  var move = node.current;\r\n  var width = window.innerWidth;\r\n  var pixelWidth = width + \"px\";\r\n  $(move).animate(\r\n    {\r\n      scrollLeft: \"+=\" + pixelWidth\r\n    },\r\n    \"slow\"\r\n  );\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { compose } from \"redux\";\r\n\r\nimport { selectIsTVFetching } from \"../../Redux/TVShow/tv-selectors\";\r\n\r\nimport WithSpinnerTVShows from \"../WithSpinner/WithSpinnerTVShows\";\r\nimport CollectionGrid from \"./CollectionGrid\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isTVGridLoading: selectIsTVFetching\r\n});\r\n\r\nconst CollectionGridTVShows = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinnerTVShows\r\n)(CollectionGrid);\r\n\r\nexport default CollectionGridTVShows;\r\n"],"sourceRoot":""}